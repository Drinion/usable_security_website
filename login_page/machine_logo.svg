<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="23.043417in"
   height="23.028189in"
   viewBox="0 0 585.3028 584.91599"
   version="1.1"
   id="svg1"
   xml:space="preserve"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs1"><linearGradient
       id="swatch18"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop18" /></linearGradient><filter
       style="color-interpolation-filters:sRGB"
       id="filter57"
       x="-0.58757763"
       y="-0.58842348"
       width="2.1751553"
       height="2.176847"><feGaussianBlur
         stdDeviation="33.163002"
         id="feGaussianBlur57" /></filter></defs><g
     id="layer1"
     transform="translate(-1205.8431,1103.9856)"><path
       id="path263"
       style="fill:#1a1a1a;stroke-width:0.266332;filter:url(#filter57)"
       d="m 1362.3593,-1024.3743 c -0.4142,0.085 -0.8745,0.3634 -1.0568,0.6382 -0.068,0.1027 -1.5459,2.8348 -3.2845,6.071 -1.7385,3.2362 -3.2687,6.0221 -3.4003,6.1913 -0.4841,0.6222 -0.4613,0.6153 -2.2697,0.6708 -0.8824,0.027 -1.9897,0.079 -2.4608,0.1147 -0.6912,0.053 -0.9338,0.045 -1.2578,-0.039 -0.4276,-0.1114 -1.0535,-0.4918 -1.2402,-0.754 -0.062,-0.087 -1.8183,-2.6161 -3.9026,-5.6198 -2.0844,-3.0036 -3.8727,-5.5515 -3.974,-5.6616 -0.267,-0.2901 -0.6814,-0.4802 -1.1306,-0.5183 -0.3684,-0.031 -0.771,0.095 -6.5283,2.0422 -3.3745,1.1415 -6.1965,2.1085 -6.2715,2.1492 -0.2317,0.126 -0.5816,0.5311 -0.6961,0.8057 -0.06,0.1441 -0.1095,0.4529 -0.1095,0.6862 0,0.2334 0.2222,3.2471 0.4935,6.6973 0.2714,3.4502 0.493,6.4308 0.493,6.6234 0,0.1925 -0.054,0.4856 -0.1178,0.6511 -0.2635,0.6733 -0.4259,0.8198 -2.5311,2.2794 -1.1136,0.7722 -2.1699,1.48099 -2.3477,1.57509 -0.247,0.1309 -0.4647,0.1779 -0.9224,0.201 -0.599,0.03 -0.5991,0.031 -7.0115,-2.63489 -6.3349,-2.6334 -6.4183,-2.6661 -6.9055,-2.6681 -0.9396,0 -0.6708,-0.2783 -5.0726,5.18109 -2.1535,2.6708 -3.9785,4.9621 -4.0545,5.0917 -0.1933,0.3265 -0.2482,0.8227 -0.1369,1.2201 0.072,0.2568 0.9613,1.4738 4.1093,5.6208 2.2098,2.9111 4.0975,5.4334 4.1945,5.6053 0.1359,0.2414 0.1827,0.4423 0.2057,0.8811 0.029,0.5683 0.029,0.5684 -1.1126,3.3166 -1.2311,2.9623 -1.3631,3.236 -1.6965,3.5166 -0.5874,0.4942 -0.4081,0.4528 -7.4998,1.7317 -3.6818,0.6639 -6.8137,1.2423 -6.9593,1.2852 -0.1456,0.043 -0.3927,0.1868 -0.5488,0.3204 -0.5299,0.4535 -0.5691,0.602 -0.9849,3.6881 -0.5223,3.8761 -0.9142,8.1311 -0.9142,10.0423 -7e-4,0.3497 -0.8028,0.022 7.258,2.9652 3.2362,1.1815 6.0349,2.2127 6.2197,2.2918 0.4093,0.1754 0.9812,0.7784 1.1369,1.1989 0.061,0.1654 0.3835,1.7911 0.7163,3.6127 0.6643,3.6362 0.6716,3.7354 0.3348,4.4468 -0.1517,0.3205 -0.7077,0.8662 -4.0964,4.0219 -5.8625,5.4594 -6.2045,5.7875 -6.3613,6.0948 -0.1855,0.3624 -0.2449,0.8871 -0.1385,1.2097 0.1167,0.3535 5.3328,10.4593 5.5397,10.7327 0.2318,0.3062 0.8223,0.5886 1.2309,0.5886 0.1797,0 3.2256,-0.6551 6.7686,-1.4557 4.4494,-1.0055 6.5727,-1.456 6.8647,-1.4568 0.3145,-8e-4 0.5363,0.05 0.8666,0.1984 0.4094,0.1842 0.6447,0.4082 3.037,2.895 2.8454,2.9575 2.8952,3.0227 2.9482,3.871 0.029,0.4618 -0.076,0.9086 -1.6315,6.9944 -1.0334,4.0429 -1.6619,6.6294 -1.6619,6.8394 0,0.3739 0.247,0.9486 0.5116,1.1912 0.087,0.08 2.4539,1.4379 5.2596,3.0179 3.4717,1.9549 5.2013,2.8913 5.4142,2.931 0.3345,0.062 0.8198,-0.016 1.1364,-0.1829 0.185,-0.098 0.6336,-0.5463 6.7215,-6.7164 3.4638,-3.5102 3.4014,-3.4597 4.3165,-3.5181 0.4367,-0.028 0.8936,0.059 3.9817,0.7524 3.8507,0.8653 3.9352,0.8942 4.4581,1.5405 0.2399,0.2966 0.4671,0.9357 2.3849,6.7045 1.166,3.507 2.1618,6.4563 2.2128,6.5536 0.1803,0.3448 0.7168,0.7545 1.1105,0.848 v 5e-4 c 0.8573,0.2037 5.4449,-0.057 10.0221,-0.57 2.1667,-0.2426 2.3027,-0.2706 2.6975,-0.5565 0.5677,-0.4112 0.5214,-0.2412 2.0526,-7.5241 0.7761,-3.6909 1.4631,-6.8126 1.5281,-6.9371 0.1784,-0.345 0.7728,-0.9389 1.0687,-1.0681 0.1452,-0.063 1.6115,-0.6262 3.2587,-1.2501 2.9949,-1.1343 2.9949,-1.1342 3.5631,-1.1064 0.4387,0.022 0.6398,0.067 0.8811,0.2026 0.1719,0.096 2.603,2.0218 5.4027,4.2788 2.7998,2.257 5.21,4.1741 5.3558,4.2602 0.3337,0.1972 1.1325,0.2176 1.4624,0.037 0.1163,-0.063 2.3994,-1.7753 5.0736,-3.8039 4.6666,-3.54 4.8706,-3.7043 5.0612,-4.0757 0.1799,-0.341 0.195,-0.4454 0.17,-0.88 -0.026,-0.4453 -0.2668,-1.1167 -2.4774,-6.9056 -2.4492,-6.4125 -2.4495,-6.4126 -2.4195,-6.9411 0.018,-0.3229 0.085,-0.6518 0.1726,-0.8455 0.196,-0.4345 3.2645,-4.6157 3.6561,-4.9816 0.3667,-0.3427 0.954,-0.5855 1.4155,-0.5855 0.1777,0 3.267,0.3165 6.8652,0.7033 3.6675,0.3944 6.644,0.6842 6.7738,0.6594 0.1275,-0.024 0.3482,-0.1027 0.4909,-0.1741 0.5778,-0.2889 0.5696,-0.2692 2.8897,-6.6146 1.8893,-5.1671 2.1704,-5.9906 2.1704,-6.3345 0,-0.5297 -0.2405,-1.0363 -0.6423,-1.3581 -0.1696,-0.1357 -2.7146,-2.0197 -5.656,-4.1868 -3.4662,-2.5537 -5.4181,-4.0361 -5.547,-4.2121 -0.1094,-0.1494 -0.2679,-0.4505 -0.3509,-0.6692 -0.1548,-0.3978 -0.1548,-0.3978 0,-2.9699 0.1436,-2.3834 0.1674,-2.5997 0.3246,-2.9481 0.3864,-0.8564 0.014,-0.6354 6.7515,-4.0049 4.9067,-2.4538 6.1913,-3.1238 6.3955,-3.3373 0.2535,-0.2651 0.4842,-0.7902 0.4842,-1.1012 0,-0.089 -0.621,-3.0244 -1.3797,-6.5231 -0.9415,-4.3417 -1.4282,-6.4498 -1.5328,-6.6399 -0.1851,-0.3367 -0.6622,-0.7149 -1.019,-0.8072 -0.1437,-0.037 -3.2737,-0.26 -6.9557,-0.4951 -3.6818,-0.2351 -6.8056,-0.4461 -6.9412,-0.4687 -0.3384,-0.057 -0.994,-0.4153 -1.2542,-0.6863 -0.1184,-0.1231 -0.6798,-1.0778 -1.248,-2.1218 -0.811,-1.4903 -1.0466,-1.9839 -1.0976,-2.298 -0.072,-0.4484 0,-0.9898 0.1902,-1.3534 0.065,-0.126 1.659,-2.829 3.5429,-6.0069 3.4254,-5.778 3.4257,-5.7778 3.4257,-6.3066 0,-0.4391 -0.03,-0.5784 -0.1762,-0.8211 -0.2159,-0.3583 -9.3182,-9.64739 -9.5922,-9.78909 -0.3381,-0.1749 -0.856,-0.2547 -1.1798,-0.1819 -0.1662,0.037 -2.9677,1.5487 -6.3614,3.4318 -6.0646,3.3652 -6.0647,3.3652 -6.5685,3.3972 -0.2771,0.017 -0.6305,0 -0.7855,-0.044 -0.155,-0.042 -1.0749,-0.5231 -2.0438,-1.0686 -1.9039,-1.0721 -2.1719,-1.2838 -2.4877,-1.9668 -0.209,-0.452 -0.1624,0.3466 -0.4677,-8.0373 -0.2583,-7.0938 -0.2099,-6.6663 -0.8196,-7.2145 -0.2595,-0.2333 -0.4485,-0.3337 -0.7849,-0.4176 -0.2436,-0.061 -3.1863,-0.7671 -6.5387,-1.5694 -5.8563,-1.4014 -6.1094,-1.4556 -6.459,-1.3834 z m -9.1953,41.28069 a 26.330372,26.330372 0 0 1 26.3302,26.3302 26.330372,26.330372 0 0 1 -26.3302,26.3307 26.330372,26.330372 0 0 1 -26.3302,-26.3307 26.330372,26.330372 0 0 1 26.3302,-26.3302 z"
       transform="matrix(1.9865088,0,0,1.9865088,-1189.5746,1089.0908)" /><path
       id="path264"
       style="fill:#00d455;stroke-width:0.529071"
       d="m 1516.7641,-945.83769 c -0.8228,0.16885 -1.7372,0.7219 -2.0993,1.26779 -0.1351,0.20401 -3.071,5.63135 -6.5247,12.06009 -3.4536,6.42874 -6.4933,11.96316 -6.7548,12.29908 -0.9616,1.236 -0.9163,1.22229 -4.5087,1.33255 -1.7529,0.0536 -3.9526,0.15693 -4.8884,0.22785 -1.3731,0.10528 -1.855,0.0894 -2.4987,-0.0775 -0.8494,-0.22129 -2.0928,-0.97676 -2.4636,-1.49762 -0.1232,-0.17283 -3.6121,-5.19711 -7.7526,-11.16379 -4.1407,-5.96687 -7.6931,-11.0283 -7.8944,-11.24701 -0.5304,-0.57629 -1.3536,-0.95393 -2.2459,-1.02961 -0.7318,-0.0616 -1.5316,0.18872 -12.9685,4.05685 -6.7035,2.2676 -12.3094,4.18875 -12.4584,4.2696 -0.4603,0.2501 -1.1554,1.05484 -1.3828,1.60033 -0.1192,0.28626 -0.2176,0.89969 -0.2176,1.36334 0,0.46346 0.4414,6.4502 0.9804,13.30405 0.5391,6.85385 0.9793,12.77484 0.9793,13.15744 0,0.3824 -0.1072,0.96465 -0.234,1.29342 -0.5234,1.33751 -0.846,1.62854 -5.028,4.52824 -2.2122,1.53399 -4.3106,2.942 -4.6638,3.12893 -0.4906,0.25984 -0.9231,0.3534 -1.8323,0.39929 -1.1899,0.0596 -1.1901,0.0616 -13.9284,-5.23443 -12.5844,-5.23127 -12.75,-5.29623 -13.7179,-5.3002 -1.8665,0 -1.3325,-0.55285 -10.0767,10.29228 -4.278,5.30557 -7.9034,9.85745 -8.0543,10.11471 -0.384,0.64879 -0.4931,1.6343 -0.272,2.42373 0.143,0.51014 1.9097,2.92772 8.1632,11.16577 4.3898,5.78293 8.1397,10.7937 8.3324,11.13518 0.27,0.47934 0.3629,0.87843 0.4086,1.75031 0.058,1.12894 0.058,1.12894 -2.2102,6.58826 -2.4456,5.88463 -2.7078,6.42834 -3.3701,6.98576 -1.1669,0.98193 -0.8107,0.89969 -14.8984,3.44003 -7.3139,1.31904 -13.5355,2.46784 -13.8247,2.55306 -0.2892,0.0854 -0.7801,0.37108 -1.0902,0.63648 -1.0527,0.90088 -1.1305,1.19608 -1.9565,7.32644 -1.0376,7.70011 -1.8161,16.1527 -1.8161,19.94912 0,0.69488 -1.5948,0.0437 14.4181,5.8904 6.4287,2.34706 11.9884,4.39574 12.3555,4.55288 0.8131,0.34823 1.9491,1.5461 2.2584,2.38142 0.1212,0.32857 0.7619,3.55824 1.423,7.17666 1.3196,7.22335 1.3341,7.42041 0.6651,8.83361 -0.3014,0.63688 -1.4059,1.72091 -8.1376,7.98974 -11.6459,10.84514 -12.3253,11.49672 -12.6368,12.10717 -0.3684,0.72011 -0.4864,1.76243 -0.2751,2.40308 0.2318,0.70223 10.5937,20.77749 11.0047,21.32061 0.4605,0.60846 1.6335,1.16926 2.4452,1.16926 0.357,0 6.4077,-1.30117 13.4459,-2.89177 8.8387,-1.99743 13.0567,-2.89235 13.6367,-2.89394 0.6248,-0.002 1.0654,0.0993 1.7216,0.39432 0.8132,0.36592 1.2807,0.81069 6.033,5.75074 5.6524,5.8751 5.7513,6.00462 5.8566,7.68998 0.058,0.91717 -0.151,1.80474 -3.241,13.89444 -2.0528,8.03125 -3.3014,13.16916 -3.3014,13.58632 0,0.74296 0.4907,1.88441 1.0163,2.36633 0.1729,0.15892 4.8747,2.85641 10.4483,5.99509 6.8965,3.88362 10.3324,5.74379 10.7553,5.82265 0.6645,0.12317 1.6286,-0.0318 2.2575,-0.36353 0.3675,-0.19467 1.2587,-1.08523 13.3523,-13.34199 6.8809,-6.97324 6.7569,-6.87292 8.5748,-6.98893 0.8675,-0.0556 1.7751,0.1172 7.9097,1.49465 7.6494,1.71892 7.8173,1.77653 8.856,3.06022 0.4766,0.58919 0.9279,1.85877 4.7376,13.31854 2.3163,6.96689 4.2945,12.8255 4.3958,13.01879 0.3582,0.68495 1.4239,1.49882 2.206,1.68456 v 9.9e-4 c 1.703,0.40465 10.8164,-0.11323 19.909,-1.13211 4.3042,-0.48213 4.5743,-0.53755 5.3586,-1.10569 1.1277,-0.81685 1.0358,-0.47915 4.0775,-14.94669 1.5417,-7.33201 2.9065,-13.53329 3.0356,-13.78041 0.3544,-0.68555 1.5352,-1.86514 2.123,-2.12199 0.2884,-0.12515 3.2012,-1.24376 6.4734,-2.48314 5.9494,-2.25349 5.9494,-2.2531 7.0781,-2.19787 0.8715,0.0417 1.271,0.13309 1.7504,0.40227 0.3414,0.1907 5.1708,4.01652 10.7325,8.49987 5.5618,4.48355 10.3497,8.29208 10.6393,8.46312 0.6629,0.39174 2.2497,0.43207 2.9051,0.0735 0.231,-0.12713 4.7664,-3.52664 10.0787,-7.55648 9.2703,-7.03224 9.6755,-7.35862 10.0542,-8.09661 0.3573,-0.6774 0.3873,-0.88479 0.3377,-1.74813 -0.052,-0.88459 -0.53,-2.21813 -4.9214,-13.71783 -4.8654,-12.73849 -4.866,-12.73889 -4.8064,-13.78876 0.036,-0.64144 0.1689,-1.29461 0.3429,-1.67939 0.3894,-0.86314 6.485,-9.16913 7.2629,-9.89599 0.7284,-0.68098 1.8951,-1.16311 2.8119,-1.16311 0.353,0 6.4899,0.62854 13.6378,1.39712 7.2855,0.78328 13.1983,1.35917 13.4562,1.3099 0.2532,-0.0477 0.6917,-0.20421 0.9751,-0.34605 1.1479,-0.5739 1.1316,-0.53477 5.7405,-13.13996 3.7531,-10.26449 4.3115,-11.90038 4.3115,-12.58354 0,-1.05225 -0.4778,-2.05842 -1.276,-2.69768 -0.3369,-0.26977 -5.3925,-4.01215 -11.2356,-8.31711 -6.8857,-5.07295 -10.7632,-8.01775 -11.0192,-8.36758 -0.2173,-0.29678 -0.5322,-0.89472 -0.6971,-1.32937 -0.3075,-0.79023 -0.3075,-0.79023 0,-5.89953 0.2853,-4.73485 0.3326,-5.16433 0.6448,-5.85663 0.7676,-1.70124 0.028,-1.26222 13.412,-7.95577 9.7472,-4.87429 12.299,-6.20525 12.7047,-6.62957 0.5036,-0.52643 0.9618,-1.56974 0.9618,-2.18755 0,-0.17679 -1.2336,-6.00799 -2.7407,-12.95819 -1.8703,-8.62483 -2.8372,-12.81258 -3.045,-13.19022 -0.3677,-0.66866 -1.3154,-1.42016 -2.0242,-1.60351 -0.2855,-0.0735 -6.5033,-0.51629 -13.8176,-0.98352 -7.3139,-0.46703 -13.5194,-0.88618 -13.7887,-0.93108 -0.6723,-0.11124 -1.9746,-0.82499 -2.4915,-1.36314 -0.2352,-0.24474 -1.3504,-2.14126 -2.4792,-4.21517 -1.611,-2.9605 -2.0791,-3.94084 -2.1804,-4.565 -0.143,-0.89055 0,-1.96605 0.3779,-2.68854 0.1291,-0.2503 3.2956,-5.61983 7.038,-11.93276 6.8046,-11.47805 6.8052,-11.47765 6.8052,-12.52812 0,-0.87207 -0.06,-1.14879 -0.3501,-1.63112 -0.4289,-0.71157 -18.5107,-19.16462 -19.055,-19.44611 -0.6716,-0.34744 -1.7004,-0.50597 -2.3436,-0.36135 -0.3302,0.0735 -5.8954,3.07651 -12.637,6.8175 -12.0474,6.6848 -12.0476,6.685 -13.0484,6.74857 -0.5505,0.0338 -1.2525,0 -1.5604,-0.0874 -0.3079,-0.0834 -2.1353,-1.03934 -4.06,-2.12298 -3.7821,-2.12954 -4.3145,-2.55028 -4.9419,-3.90706 -0.4152,-0.89791 -0.3226,0.68852 -0.9291,-15.96617 -0.5131,-14.0919 -0.4169,-13.24266 -1.6281,-14.33167 -0.5155,-0.46345 -0.891,-0.6627 -1.5592,-0.82937 -0.4839,-0.12117 -6.3296,-1.52405 -12.9892,-3.11782 -11.6336,-2.7839 -12.1364,-2.89137 -12.8309,-2.74794 z m -18.2665,82.00445 a 52.305515,52.305515 0 0 1 52.3051,52.30517 52.305515,52.305515 0 0 1 -52.3051,52.30617 52.305515,52.305515 0 0 1 -52.3052,-52.30617 52.305515,52.305515 0 0 1 52.3052,-52.30517 z" /></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
